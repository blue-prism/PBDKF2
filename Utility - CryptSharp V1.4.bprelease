<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>Utility - CryptSharp V1.4</bpr:name>
    <bpr:release-notes />
    <bpr:created>2020-08-10 17:12:00Z</bpr:created>
    <bpr:package-id>46</bpr:package-id>
    <bpr:package-name>Utility - CryptSharp V1.0</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="4">
        <process id="5ff16cd8-db6a-49c8-812f-35dbdae506fa" name="Process Examples - Utility CryptSharp" xmlns="http://www.blueprism.co.uk/product/process"><process name="Process Examples - Utility CryptSharp" version="1.0" bpversion="6.8.0.23415" narrative="CryptSharp encryption example." byrefcollection="true"><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="723b9715-92c7-42e3-bf2a-a2bf9ee857d5" type="Normal" published="False"><name>Blowfish</name><view><camerax>-156</camerax><cameray>-29</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e28bc375-9217-4929-8dc9-1e31943fe664" type="Normal" published="False"><name>Extended DES</name><view><camerax>0</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="744aa3fd-4db4-4297-aeea-3c336aae8dbc" type="Normal" published="False"><name>LDAP</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e2828f0a-e6d9-4a88-929d-6a01432a4c6c" type="Normal" published="False"><name>MD5</name><view><camerax>-21</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="33048d69-d2a7-455f-b16e-369657c097da" type="Normal" published="False"><name>Phpass</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9aecdeb1-0773-4fd7-8db1-0faf45b0196e" type="Normal" published="False"><name>SHA256</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5" type="Normal" published="False"><name>SHA512</name><view><camerax>-51</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="368afd3f-163b-4105-bb05-d3a5745fc34f" type="Normal" published="False"><name>Traditional DES</name><view><camerax>-21</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="a45094d9-98dd-4302-a71d-650a28c8709e" name="Start" type="Start"><display x="15" y="-105" /><onsuccess>1d4c292f-d875-4156-b999-d57bd8ba7804</onsuccess></stage><stage stageid="b5696426-a39c-4398-85f2-f67b8083e8d2" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="389fbf23-e9ef-45d7-867f-ddc7af00b372" name="Blowfish" type="SubSheetInfo"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><narrative>The problems present in traditional UNIX password hashes led naturally to a new password scheme which we call bcrypt, referring to the Blowfish encryption algorithm. Bcrypt uses a 128-bit salt and encrypts a 192-bit magic value. It takes advantage of the expensive key setup in eksblowfish.

The bcrypt algorithm runs in two phases, sketched in Figure 3. In the first phase, EksBlowfishSetup is called with the cost, the salt, and the password, to initialize eksblowfish's state. Most of bcrypt's time is spent in the expensive key schedule. Following that, the 192-bit value ``OrpheanBeholderScryDoubt'' is encrypted 64 times using eksblowfish in ECB mode with the state from the previous phase. The output is the cost and 128-bit salt concatenated with the result of the encryption loop. Source: (https://www.usenix.org/legacy/event/usenix99/provos/provos_html/node5.html)</narrative><display x="-210" y="-150" w="420" h="120" /></stage><stage stageid="909c620f-9209-43b0-bf28-b15eea7353a8" name="Start" type="Start"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><display x="105" y="-105" /><onsuccess>ac8e1f58-e7f8-41e0-a728-12697bc3f264</onsuccess></stage><stage stageid="a705f350-077d-4d21-bcd6-8dfb5ad92194" name="End" type="End"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><display x="105" y="90" /></stage><stage stageid="ac8e1f58-e7f8-41e0-a728-12697bc3f264" name="Utility - CryptSharp::Blowfish" type="Action"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to encrypt" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password" stage="ciphertext" /></outputs><onsuccess>5a29bb71-9f7a-42fe-9027-7f349d2afd3a</onsuccess><resource object="Utility - CryptSharp" action="Blowfish" /></stage><stage stageid="fd311884-baf2-486a-bf01-2ec98f603a82" name="password" type="Data"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b903fa5-f6d0-4177-a097-5e8245016d41" name="ciphertext" type="Data"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><display x="-150" y="0" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a29bb71-9f7a-42fe-9027-7f349d2afd3a" name="Utility - CryptSharp::Blowfish Verify" type="Action"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The ciphertext to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The password validity status" stage="IsValid" /></outputs><onsuccess>a705f350-077d-4d21-bcd6-8dfb5ad92194</onsuccess><resource object="Utility - CryptSharp" action="Blowfish Verify" /></stage><stage stageid="e2c2c4f7-2bd5-4a29-a12f-a07988672972" name="IsValid" type="Data"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><display x="-195" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a70fd76f-565b-46af-b878-ff320d7148db" name="Inputs" type="Block"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-45" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="e063fee6-623b-4b3f-a678-c2866c9a0e9c" name="Outputs" type="Block"><subsheetid>723b9715-92c7-42e3-bf2a-a2bf9ee857d5</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="75" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="1d4c292f-d875-4156-b999-d57bd8ba7804" name="End" type="End"><display x="15" y="15" /></stage><stage stageid="55437017-b0cc-4e8a-8129-91e158998f73" name="Extended DES" type="SubSheetInfo"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><narrative>Traditional crypt(3)'s design rationale dates back to 1976 [9]. It uses a password of up to eight characters as a key for DES [10]. The 56-bit DES key is formed by combining the low-order 7 bits of each character in the password. If the password is shorter than 8 characters, it is padded with zero bits on the right.

A 12-bit salt is used to perturb the DES algorithm, so that the same password plaintext can produce 4,096 possible password encryptions. A modification to the DES algorithm, swapping bits i and i+24 in the DES E-Box output when bit i is set in the salt, achieves this while also making DES encryption hardware useless for password guessing.

The 64-bit constant ``'' is encrypted 25 times with the DES key. The final output is the 12-bit salt concatenated with the encrypted 64-bit value. The resulting 76-bit value is recoded into 13 printable ASCII characters.

At the time traditional crypt was conceived, it was fast enough for authentication but too costly for password guessing to be practical. Today, we are aware that it exhibits three serious limitations: the restricted password space, the small salt space, and the constant execution cost. (source: https://www.usenix.org/legacy/event/usenix99/provos/provos_html/node9.html)</narrative><display x="-135" y="-195" w="330" h="240" /></stage><stage stageid="48f72ee7-2734-4fab-99fd-1a51e56df5de" name="Start" type="Start"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><display x="105" y="-105" /><onsuccess>93402040-fb06-4507-b151-16b414039694</onsuccess></stage><stage stageid="37741d9f-910e-4b29-923d-669a46afc6c4" name="End" type="End"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><display x="105" y="90" /></stage><stage stageid="93402040-fb06-4507-b151-16b414039694" name="Utility - CryptSharp::ExtendedDESEncrypt" type="Action"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to encrypt" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password." stage="ciphertext" /></outputs><onsuccess>c00f481c-f692-428a-9641-0ebea101a9e4</onsuccess><resource object="Utility - CryptSharp" action="ExtendedDESEncrypt" /></stage><stage stageid="96f22a8b-61f9-49fb-83f7-dc1e8d8ce587" name="password" type="Data"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><display x="-195" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5979566a-0550-4d88-ae7b-bae23579b1db" name="ciphertext" type="Data"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><display x="-90" y="-15" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c00f481c-f692-428a-9641-0ebea101a9e4" name="Utility - CryptSharp::ExtendedDESEncrypt - Verify" type="Action"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The ciphertext to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The password validity status" stage="IsValid" /></outputs><onsuccess>37741d9f-910e-4b29-923d-669a46afc6c4</onsuccess><resource object="Utility - CryptSharp" action="ExtendedDESEncrypt - Verify" /></stage><stage stageid="861a0ba7-abc1-4dc4-ab9b-5b3b590ae46c" name="IsValid" type="Data"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><display x="-135" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ac796f9-8333-47b9-9b17-4fd9f167afff" name="Inputs" type="Block"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-60" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="2cb074e4-6d2f-411c-b6c6-8e7ca575705a" name="Outputs" type="Block"><subsheetid>e28bc375-9217-4929-8dc9-1e31943fe664</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="60" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="cab05a05-a34c-43be-ae9e-e093648bbe07" name="LDAP" type="SubSheetInfo"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><narrative>Lightweight directory access protocol is a client/server protocol used to access and manage directory information. It reads and edits directories over IP networks and runs directly over TCP/IP using simple string formats for data transfer. (source: https://www.techopedia.com/definition/2439/lightweight-directory-access-protocol-ldap)</narrative><display x="-180" y="-105" w="240" h="90" /></stage><stage stageid="39491848-1d83-407f-a759-7c6698d37bdd" name="Start" type="Start"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><display x="105" y="-105" /><onsuccess>cf4aec2a-eb0b-4f6b-b7c6-2758f5b05035</onsuccess></stage><stage stageid="e780e105-7cc1-4fc3-a393-0499fc5824b3" name="End" type="End"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><display x="105" y="90" /></stage><stage stageid="cf4aec2a-eb0b-4f6b-b7c6-2758f5b05035" name="Utility - CryptSharp::LDAPEncrypt" type="Action"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to encrypt" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password" stage="ciphertext" /></outputs><onsuccess>b6504530-5abb-418c-8d2d-9eaea5ee6365</onsuccess><resource object="Utility - CryptSharp" action="LDAPEncrypt" /></stage><stage stageid="5c777535-67d1-4c99-b0cb-19265131cb61" name="password" type="Data"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4ab7b81-43ed-4ce0-a943-bd92df2008e7" name="ciphertext" type="Data"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><display x="-150" y="0" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6504530-5abb-418c-8d2d-9eaea5ee6365" name="Utility - CryptSharp::LDAPEncrypt - Verify" type="Action"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The password validity status." stage="IsValid" /></outputs><onsuccess>e780e105-7cc1-4fc3-a393-0499fc5824b3</onsuccess><resource object="Utility - CryptSharp" action="LDAPEncrypt - Verify" /></stage><stage stageid="c15c714e-e723-4824-9984-f730c0801c8d" name="IsValid" type="Data"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><display x="-195" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c980f1aa-528d-476c-882e-a5072be2a094" name="Inputs" type="Block"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-45" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="4ce46e50-a4af-481e-aca7-ae42721b7523" name="Outputs" type="Block"><subsheetid>744aa3fd-4db4-4297-aeea-3c336aae8dbc</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="75" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="5477e8d6-d5c0-4993-9bd6-c816bcfa6dee" name="MD5" type="SubSheetInfo"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><narrative>The MD5 hashing algorithm is a one-way cryptographic function that accepts a message of any length as input and returns as output a fixed-length digest value to be used for authenticating the original message. The MD5 hash function was originally designed for use as a secure cryptographic hash algorithm for authenticating digital signatures. MD5 has been deprecated for uses other than as a non-cryptographic checksum to verify data integrity and detect unintentional data corruption.</narrative><display x="-150" y="-120" w="300" h="90" /></stage><stage stageid="f932611c-8552-4693-abc0-8fdf36dcdfe4" name="Start" type="Start"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><display x="105" y="-105" /><onsuccess>a3625d1c-e729-4515-992f-1296d7605602</onsuccess></stage><stage stageid="46a45413-a192-48ee-85a6-15eced4667b3" name="End" type="End"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><display x="105" y="90" /></stage><stage stageid="a3625d1c-e729-4515-992f-1296d7605602" name="Utility - CryptSharp::MD5Encrypt" type="Action"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to be encrypted" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password" stage="ciphertext" /></outputs><onsuccess>109bd374-faaf-4667-9f3b-b176b8f8dee1</onsuccess><resource object="Utility - CryptSharp" action="MD5Encrypt" /></stage><stage stageid="eb71590a-2894-4ccd-9486-edd01eec28f8" name="password" type="Data"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a0de8f57-e2b6-443a-8341-2e46c4d5fbab" name="ciphertext" type="Data"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><display x="-150" y="0" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="109bd374-faaf-4667-9f3b-b176b8f8dee1" name="Utility - CryptSharp::MD5Encrypt - Verify" type="Action"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The ciphertext to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The validity status of the password" stage="IsValid" /></outputs><onsuccess>46a45413-a192-48ee-85a6-15eced4667b3</onsuccess><resource object="Utility - CryptSharp" action="MD5Encrypt - Verify" /></stage><stage stageid="4e176187-3d22-4638-ad0f-ef34cd104c54" name="IsValid" type="Data"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><display x="-195" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e4b69969-1747-4a66-a123-30b9c8c8f1a3" name="Inputs" type="Block"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-45" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="191eb11f-8404-4676-a53b-d8e65ec01dfc" name="Outputs" type="Block"><subsheetid>e2828f0a-e6d9-4a88-929d-6a01432a4c6c</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="75" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="91fea4e5-4b53-426f-9ee7-28a97af82b80" name="Phpass" type="SubSheetInfo"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><narrative>Phpass is a portable public domain password hashing framework for use in PHP applications. phpass was released in 2005  when a typical web host ran PHP 4 and a typical web app used raw MD5. (source: https://www.openwall.com/phpass/)</narrative><display x="-180" y="-105" w="240" h="60" /></stage><stage stageid="d67970e1-24ae-4dea-a060-1c6c5a3f53e8" name="Start" type="Start"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><display x="105" y="-105" /><onsuccess>0a60e6c8-3d95-4a9d-9cfa-ed09894e57f0</onsuccess></stage><stage stageid="49ca190e-dae3-4353-82bc-e4e9a71b00d9" name="End" type="End"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><display x="105" y="90" /></stage><stage stageid="0a60e6c8-3d95-4a9d-9cfa-ed09894e57f0" name="Utility - CryptSharp::PhpassEncrypt" type="Action"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password" stage="ciphertext" /></outputs><onsuccess>c876dcb8-c216-45ca-83b0-baa587ba5f78</onsuccess><resource object="Utility - CryptSharp" action="PhpassEncrypt" /></stage><stage stageid="11949ef2-f972-49c3-b9a9-84002f084d22" name="password" type="Data"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9858e72a-482c-4ed7-bc21-94e473ea37f5" name="ciphertext" type="Data"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><display x="-150" y="0" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c876dcb8-c216-45ca-83b0-baa587ba5f78" name="Utility - CryptSharp::PhpassEncrypt - Verify" type="Action"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The ciphertext to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The validity status of the password" stage="IsValid" /></outputs><onsuccess>49ca190e-dae3-4353-82bc-e4e9a71b00d9</onsuccess><resource object="Utility - CryptSharp" action="PhpassEncrypt - Verify" /></stage><stage stageid="35819ae2-7930-4e23-9e1e-994002170879" name="IsValid" type="Data"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><display x="-195" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12ca1ae9-27e8-41f1-8142-3a6d0098399d" name="Inputs" type="Block"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-45" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="b8e28791-a0e5-4ade-9348-753b3b0c46ed" name="Outputs" type="Block"><subsheetid>33048d69-d2a7-455f-b16e-369657c097da</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="75" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="49e5180f-0eb2-4910-9cb0-fb59d0784463" name="SHA256" type="SubSheetInfo"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><narrative>SHA-256 is one of the successor hash functions to SHA-1 (collectively referred to as SHA-2), and is one of the strongest hash functions available. SHA-256 is not much more complex to code than SHA-1, and has not yet been compromised in any way. The 256-bit key makes it a good partner-function for AES. It is defined in the NIST (National Institute of Standards and Technology) standard ‘FIPS 180-4’. NIST also provide a number of test vectors to verify correctness of implementation. (source: https://www.movable-type.co.uk/scripts/sha256.html)</narrative><display x="-150" y="-105" w="300" h="90" /></stage><stage stageid="0f83b0f2-acc1-4766-817e-dc77cf7fc7ed" name="Start" type="Start"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><display x="105" y="-105" /><onsuccess>e32cf456-70ff-48b7-9c3e-848af3ef4ee9</onsuccess></stage><stage stageid="9f88757a-73d1-491c-8889-fa6720fa06e1" name="End" type="End"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><display x="105" y="90" /></stage><stage stageid="e32cf456-70ff-48b7-9c3e-848af3ef4ee9" name="Utility - CryptSharp::SHA256Encrypt" type="Action"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password" stage="ciphertext" /></outputs><onsuccess>2a8aaf71-1646-489e-98ef-682758f6b17b</onsuccess><resource object="Utility - CryptSharp" action="SHA256Encrypt" /></stage><stage stageid="1ddb1e01-4e29-4e0b-80f5-f5e3614f3011" name="password" type="Data"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10c2bc9c-8ee6-4ae3-a00e-1a1d113be17b" name="ciphertext" type="Data"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><display x="-150" y="0" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2a8aaf71-1646-489e-98ef-682758f6b17b" name="Utility - CryptSharp::SHA256Encrypt - Verify" type="Action"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The ciphertext to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The validity status of the password" stage="IsValid" /></outputs><onsuccess>9f88757a-73d1-491c-8889-fa6720fa06e1</onsuccess><resource object="Utility - CryptSharp" action="SHA256Encrypt - Verify" /></stage><stage stageid="e85a46fe-92a7-4b9e-9e59-d10f5c903cac" name="IsValid" type="Data"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><display x="-195" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9bbaa557-7a26-4a81-90e7-ec4e4fcf6fa3" name="Inputs" type="Block"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-45" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="73390384-8bc5-4f77-abad-41d9bb93f66a" name="Outputs" type="Block"><subsheetid>9aecdeb1-0773-4fd7-8db1-0faf45b0196e</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="75" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="b39587f1-0140-4cbf-bedc-d41fd3dec5fb" name="SHA512" type="SubSheetInfo"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><narrative> SHA-256 and SHA-512 are novel hash functions computed with 32-bit and 64-bit words, respectively. They use different shift amounts and additive constants, but their structures are otherwise virtually identical, differing only in the number of rounds. SHA-224 and SHA-384 are truncated versions of SHA-256 and SHA-512 respectively, computed with different initial values. SHA-512/224 and SHA-512/256 are also truncated versions of SHA-512, but the initial values are generated using the method described in Federal Information Processing Standards (FIPS) PUB 180-4. (source: https://en.wikipedia.org/wiki/SHA-2)</narrative><display x="-165" y="-135" w="270" h="120" /></stage><stage stageid="00fd0593-946f-4741-8664-288a20c3e763" name="Start" type="Start"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><display x="105" y="-105" /><onsuccess>64f28c25-6dd4-47c5-b083-9fb51cf50f21</onsuccess></stage><stage stageid="6aed5173-a897-4938-9db1-b78c495074b2" name="End" type="End"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><display x="105" y="90" /></stage><stage stageid="64f28c25-6dd4-47c5-b083-9fb51cf50f21" name="Utility - CryptSharp::SHA512Encrypt" type="Action"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password" stage="ciphertext" /></outputs><onsuccess>1054ca77-f0e8-46ff-91f5-378a32101eab</onsuccess><resource object="Utility - CryptSharp" action="SHA512Encrypt" /></stage><stage stageid="47e50169-f733-47d8-996b-b217ba20e7cf" name="password" type="Data"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="74633cce-c67c-42ec-b08e-114ccbcd2d55" name="ciphertext" type="Data"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><display x="-150" y="0" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1054ca77-f0e8-46ff-91f5-378a32101eab" name="Utility - CryptSharp::SHA512Encrypt - Verify" type="Action"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The ciphertext to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The validity status of the password" stage="IsValid" /></outputs><onsuccess>6aed5173-a897-4938-9db1-b78c495074b2</onsuccess><resource object="Utility - CryptSharp" action="SHA512Encrypt - Verify" /></stage><stage stageid="59f65ecd-54e1-433a-8292-bf40c5f14eef" name="IsValid" type="Data"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><display x="-195" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fa38ceb6-8090-453e-9f7f-af9ca2f8e8d0" name="Inputs" type="Block"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-45" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="ba60918e-dfcb-45d4-b0f1-6817149ec1f4" name="Outputs" type="Block"><subsheetid>4b27f4a1-cb83-42c8-ba6d-f2f7064e0ad5</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="75" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="cface960-6fb0-4dd2-a75e-afaa48764cce" name="Traditional DES" type="SubSheetInfo"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><narrative>The Data Encryption Standard (DES) is a symmetric-key algorithm for the encryption of digital data. Although its short key length of 56 bits makes it too insecure for applications, it has been highly influential in the advancement of cryptography.

Developed in the early 1970s at IBM and based on an earlier design by Horst Feistel, the algorithm was submitted to the National Bureau of Standards (NBS) following the agency's invitation to propose a candidate for the protection of sensitive, unclassified electronic government data. In 1976, after consultation with the National Security Agency (NSA), the NBS selected a slightly modified version (strengthened against differential cryptanalysis, but weakened against brute-force attacks), which was published as an official Federal Information Processing Standard (FIPS) for the United States in 1977. (source: https://en.wikipedia.org/wiki/Data_Encryption_Standard)</narrative><display x="-120" y="-150" w="360" h="150" /></stage><stage stageid="797c9e62-2691-41b4-a399-1c6fb1086f11" name="Start" type="Start"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><display x="105" y="-105" /><onsuccess>10539287-8ad9-4bae-af19-d9869aec93b7</onsuccess></stage><stage stageid="059f1949-cd2f-44df-b3a0-f09c7bd3ccf4" name="End" type="End"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><display x="105" y="90" /></stage><stage stageid="10539287-8ad9-4bae-af19-d9869aec93b7" name="Utility - CryptSharp::DESEncrypt" type="Action"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" expr="[password]" /></inputs><outputs><output type="text" name="ciphertext" friendlyname="ciphertext" narrative="The encrypted password" stage="ciphertext" /></outputs><onsuccess>0c2a40d0-7eeb-43e8-bdfe-7dfebccf2808</onsuccess><resource object="Utility - CryptSharp" action="DESEncrypt" /></stage><stage stageid="8faf5e0e-6852-4127-bdbb-ecd4f19560a9" name="password" type="Data"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f66918a-b165-4808-b52c-49171d6fa1ca" name="ciphertext" type="Data"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><display x="-150" y="0" w="120" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c2a40d0-7eeb-43e8-bdfe-7dfebccf2808" name="Utility - CryptSharp::DESEncrypt - Verify" type="Action"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><loginhibit onsuccess="true" /><display x="105" y="15" w="120" h="30" /><inputs><input type="text" name="password" friendlyname="password" narrative="The password to verify" expr="[password]" /><input type="text" name="ciphertext" friendlyname="ciphertext" narrative="The ciphertext to verify against." expr="[ciphertext]" /></inputs><outputs><output type="flag" name="IsValid" friendlyname="IsValid" narrative="The validity status of the password" stage="IsValid" /></outputs><onsuccess>059f1949-cd2f-44df-b3a0-f09c7bd3ccf4</onsuccess><resource object="Utility - CryptSharp" action="DESEncrypt - Verify" /></stage><stage stageid="d5636ef3-5e1b-41a2-b22e-b3bfa2e118b2" name="IsValid" type="Data"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><display x="-195" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89094cd4-e728-4721-a36b-e58c75cf3110" name="Inputs" type="Block"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-45" w="225" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="f629b1b8-eac2-434c-9b2a-c2085caffa9d" name="Outputs" type="Block"><subsheetid>368afd3f-163b-4105-bb05-d3a5745fc34f</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="75" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage></process></process>
        <object id="9214daa1-8813-4d68-82ea-59ef5d76201c" name="Utility - CryptSharp" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - CryptSharp" version="1.0" bpversion="6.8.0.23415" narrative="Password Encryption Utility." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>68b0c143-b52f-4458-8ac3-ab93a1d734c2</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-153</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="a6c007ca-4753-407a-a0f7-fb7288898741" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13063294-0327-45f9-9e01-5760d9877ae7" type="Normal" published="True"><name>Blowfish</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a9f7ec-b38b-446e-a7cc-daa79d7395a4" type="Normal" published="True"><name>Blowfish Verify</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a8bea81-0723-4713-8917-a1bff73f5680" type="Normal" published="True"><name>ExtendedDESEncrypt</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="30cac4ad-9ac0-4341-a26e-1e63861ac55f" type="Normal" published="True"><name>ExtendedDESEncrypt - Verify</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0" type="Normal" published="True"><name>LDAPEncrypt</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="403a7912-2ad9-4d01-ae1b-d02419a3b093" type="Normal" published="True"><name>LDAPEncrypt - Verify</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2cdebcbe-9d32-4905-ac23-b7aacadfddf4" type="Normal" published="True"><name>MD5Encrypt</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7f89ac6f-b899-4443-bdee-056b053523e8" type="Normal" published="True"><name>MD5Encrypt - Verify</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="386412b9-1c13-4805-8fca-dac13c321012" type="Normal" published="True"><name>PhpassEncrypt</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="98200341-5099-41d1-b108-210034443703" type="Normal" published="True"><name>PhpassEncrypt - Verify</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d14ad524-f8c3-4ca4-ab57-c201415fdc87" type="Normal" published="True"><name>SHA256Encrypt</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1c41502d-e887-4501-82ac-168b8cd1941f" type="Normal" published="True"><name>SHA256Encrypt - Verify</name><view><camerax>-118</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d67ecf93-1cce-4092-ab90-dd23ed6f9119" type="Normal" published="True"><name>SHA512Encrypt</name><view><camerax>-66</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="28c51aed-a858-430c-b7c4-94c0dcf0c1f0" type="Normal" published="True"><name>SHA512Encrypt - Verify</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="836bff2a-e716-4215-92b2-9dc570e4e3e1" type="Normal" published="True"><name>DESEncrypt</name><view><camerax>-207</camerax><cameray>-89</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d81901fa-5c0e-4eb7-88b8-91bfa803cc5f" type="Normal" published="True"><name>DESEncrypt - Verify</name><view><camerax>0</camerax><cameray>126</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="ce182638-a991-47f1-9ec1-398a89155317" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>8c4bcfba-f928-4e55-88fe-fc74a43d61f8</onsuccess></stage><stage stageid="8c4bcfba-f928-4e55-88fe-fc74a43d61f8" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="1086da8a-c4ce-4833-9400-4683b2d8a2b7" name="Stage1" type="ProcessInfo"><display x="-120" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>CryptSharp.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>CryptSharp</import><import>CryptSharp.Utility</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="4926f1c8-6a40-4c02-8ef2-45df060cf7a3" name="Clean Up" type="SubSheetInfo"><subsheetid>a6c007ca-4753-407a-a0f7-fb7288898741</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c4ee9e64-2aff-4ea1-b2a7-3d5943e5a3d1" name="Start" type="Start"><subsheetid>a6c007ca-4753-407a-a0f7-fb7288898741</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>b8d37771-0672-4254-82de-40d823747c92</onsuccess></stage><stage stageid="b8d37771-0672-4254-82de-40d823747c92" name="End" type="End"><subsheetid>a6c007ca-4753-407a-a0f7-fb7288898741</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e8e77db6-6842-4140-80db-2f78e012322e" name="Blowfish" type="SubSheetInfo"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><narrative>The problems present in traditional UNIX password hashes led naturally to a new password scheme which we call bcrypt, referring to the Blowfish encryption algorithm. Bcrypt uses a 128-bit salt and encrypts a 192-bit magic value. It takes advantage of the expensive key setup in eksblowfish.

The bcrypt algorithm runs in two phases, sketched in Figure 3. In the first phase, EksBlowfishSetup is called with the cost, the salt, and the password, to initialize eksblowfish's state. Most of bcrypt's time is spent in the expensive key schedule. Following that, the 192-bit value ``OrpheanBeholderScryDoubt'' is encrypted 64 times using eksblowfish in ECB mode with the state from the previous phase. The output is the cost and 128-bit salt concatenated with the result of the encryption loop. Source: (https://www.usenix.org/legacy/event/usenix99/provos/provos_html/node5.html)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="29b9ffa5-a06c-4819-8026-92a7cac2a25d" name="Start" type="Start"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to encrypt" stage="blowfishpassword" /></inputs><onsuccess>28ef01cc-9fe2-4fd9-a377-8b2cc92dada8</onsuccess></stage><stage stageid="92922a3c-5e53-4f6c-a4ed-0d8af789a917" name="End" type="End"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password" stage="blowfishciphertext" /></outputs></stage><stage stageid="16e7dba3-c3c6-434b-a3c5-8b5b33dd1dc3" name="Note1" type="Note"><subsheetid>a6c007ca-4753-407a-a0f7-fb7288898741</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="07c8a3a8-19f2-4c09-a7a2-2ec09506e440" name="Blowfish Verify" type="SubSheetInfo"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><narrative>The verify allows a password to be checked against the Blowfish encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c8c8d91d-5e6d-4873-896a-718d09205221" name="Start" type="Start"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="password" /><input type="text" name="ciphertext" narrative="The ciphertext to verify against." stage="ciphertext" /></inputs><onsuccess>d64343cd-21e2-46ec-8674-ce8ca67b33ac</onsuccess></stage><stage stageid="dc2b679d-dcdd-421b-adaf-577e41379bd9" name="End" type="End"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The password validity status" stage="BlowfishIsValid" /></outputs></stage><stage stageid="28ef01cc-9fe2-4fd9-a377-8b2cc92dada8" name="Blowfish Engine" type="Code"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="blowfishpassword" expr="[blowfishpassword]" /></inputs><outputs><output type="text" name="blowfishciphertext" stage="blowfishciphertext" /></outputs><onsuccess>92922a3c-5e53-4f6c-a4ed-0d8af789a917</onsuccess><code><![CDATA[blowfishciphertext = Crypter.Blowfish.Crypt(blowfishpassword);]]></code></stage><stage stageid="a3df75d6-5d2a-484d-9749-9fbbb4cb4eac" name="blowfishciphertext" type="Data"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae1a0892-9399-4b47-a694-db92abab2990" name="blowfishpassword" type="Data"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d64343cd-21e2-46ec-8674-ce8ca67b33ac" name="Blowfish Engine Verify" type="Code"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="blowfishpassword" expr="[password]" /><input type="text" name="blowfishciphertext" expr="[ciphertext]" /></inputs><outputs><output type="flag" name="BlowfishIsValid" stage="BlowfishIsValid" /></outputs><onsuccess>dc2b679d-dcdd-421b-adaf-577e41379bd9</onsuccess><code><![CDATA[BlowfishIsValid = Crypter.CheckPassword(blowfishpassword,blowfishciphertext);]]></code></stage><stage stageid="153331fd-ea32-4e62-94a9-16d522e6cb8c" name="BlowfishIsValid" type="Data"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><display x="-195" y="120" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b40cd37-45ec-4b09-9ae9-c2436d81319d" name="ExtendedDESEncrypt" type="SubSheetInfo"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><narrative>Traditional crypt(3)'s design rationale dates back to 1976 [9]. It uses a password of up to eight characters as a key for DES [10]. The 56-bit DES key is formed by combining the low-order 7 bits of each character in the password. If the password is shorter than 8 characters, it is padded with zero bits on the right.

A 12-bit salt is used to perturb the DES algorithm, so that the same password plaintext can produce 4,096 possible password encryptions. A modification to the DES algorithm, swapping bits i and i+24 in the DES E-Box output when bit i is set in the salt, achieves this while also making DES encryption hardware useless for password guessing.

The 64-bit constant ``'' is encrypted 25 times with the DES key. The final output is the 12-bit salt concatenated with the encrypted 64-bit value. The resulting 76-bit value is recoded into 13 printable ASCII characters.

At the time traditional crypt was conceived, it was fast enough for authentication but too costly for password guessing to be practical. Today, we are aware that it exhibits three serious limitations: the restricted password space, the small salt space, and the constant execution cost. (source: https://www.usenix.org/legacy/event/usenix99/provos/provos_html/node9.html)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="667b1d02-b899-4ec3-b888-597145246cff" name="Start" type="Start"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to encrypt" stage="EDES_password" /></inputs><onsuccess>c80062d5-24c1-491c-9dba-22a71a49e0b1</onsuccess></stage><stage stageid="804dabe8-9031-4adf-afbf-b61d17914558" name="End" type="End"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password." stage="EDES_ciphertext" /></outputs></stage><stage stageid="c80062d5-24c1-491c-9dba-22a71a49e0b1" name="EDES Engine" type="Code"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="EDES_password" expr="[EDES_password]" /></inputs><outputs><output type="text" name="EDES_ciphertext" stage="EDES_ciphertext" /></outputs><onsuccess>804dabe8-9031-4adf-afbf-b61d17914558</onsuccess><code><![CDATA[EDES_ciphertext = Crypter.ExtendedDes.Crypt(EDES_password);]]></code></stage><stage stageid="6b9359a2-ff5d-4bd5-959f-3c3d1c91dde8" name="EDES_ciphertext" type="Data"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc3cadf1-7a74-48ac-8783-78f05bd851a9" name="EDES_password" type="Data"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d561d55-50b0-4772-9cc8-ac9d41ef103a" name="ExtendedDESEncrypt - Verify" type="SubSheetInfo"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><narrative>The verify allows a password to be checked against the ExtendedDES encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="781dbcd9-b273-424c-837a-0a8e02e3f9f8" name="Start" type="Start"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="EDES_password" /><input type="text" name="ciphertext" narrative="The ciphertext to verify against." stage="EDES_ciphertext" /></inputs><onsuccess>b7dea1b7-c060-4b6a-b1ba-3d7afa64d5ea</onsuccess></stage><stage stageid="bf3e7e16-3861-4c32-9840-56091b9789a4" name="End" type="End"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The password validity status" stage="EDES_IsValid" /></outputs></stage><stage stageid="b7dea1b7-c060-4b6a-b1ba-3d7afa64d5ea" name="EDES Engine Verify" type="Code"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="EDES_password" expr="[EDES_password]" /><input type="text" name="EDES_ciphertext" expr="[EDES_ciphertext]" /></inputs><outputs><output type="flag" name="EDES_IsValid" stage="EDES_IsValid" /></outputs><onsuccess>bf3e7e16-3861-4c32-9840-56091b9789a4</onsuccess><code><![CDATA[EDES_IsValid = Crypter.CheckPassword(EDES_password,EDES_ciphertext);]]></code></stage><stage stageid="77e777cd-6970-448a-9bd1-aef200edff90" name="EDES_IsValid" type="Data"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><display x="-195" y="180" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79c554a7-260d-486b-8b7c-24f63b45e37f" name="LDAPEncrypt" type="SubSheetInfo"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><narrative>Lightweight directory access protocol is a client/server protocol used to access and manage directory information. It reads and edits directories over IP networks and runs directly over TCP/IP using simple string formats for data transfer. (source: https://www.techopedia.com/definition/2439/lightweight-directory-access-protocol-ldap)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="285fc116-e933-4bfd-8ec2-9fe7ec6ae5bc" name="Start" type="Start"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to encrypt" stage="LDAP_password" /></inputs><onsuccess>8f2ed1f8-9bad-431e-9690-3aaa42925abb</onsuccess></stage><stage stageid="7a1556ff-041c-4406-9f05-93d36b3ed397" name="End" type="End"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password" stage="LDAP_ciphertext" /></outputs></stage><stage stageid="8f2ed1f8-9bad-431e-9690-3aaa42925abb" name="LDAPEncrypt Engine" type="Code"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="LDAP_password" expr="[LDAP_password]" /></inputs><outputs><output type="text" name="LDAP_ciphertext" stage="LDAP_ciphertext" /></outputs><onsuccess>7a1556ff-041c-4406-9f05-93d36b3ed397</onsuccess><code><![CDATA[LDAP_ciphertext = Crypter.Ldap.Crypt(LDAP_password);]]></code></stage><stage stageid="8c184670-c96d-4089-a830-f86fbda6ab43" name="LDAP_ciphertext" type="Data"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20b7d5f2-b8db-475a-864a-f4bb18c654a9" name="LDAP_password" type="Data"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f54ee1f5-0225-49de-a85a-37847df06816" name="LDAPEncrypt - Verify" type="SubSheetInfo"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><narrative>The verify allows a password to be checked against the LDAP encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5ceba02b-822a-4b88-9b44-8ce20aaea6ec" name="Start" type="Start"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="LDAP_password" /><input type="text" name="ciphertext" narrative="The encrypted password to verify against." stage="LDAP_ciphertext" /></inputs><onsuccess>fcfafa0e-d01e-4eb9-b142-619f52d602a8</onsuccess></stage><stage stageid="774c12d7-1bc6-4cbb-a22d-b3690dbfe112" name="End" type="End"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The password validity status." stage="LDAP_IsValid" /></outputs></stage><stage stageid="fcfafa0e-d01e-4eb9-b142-619f52d602a8" name="LDAP Engine Verify" type="Code"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="LDAP_password" expr="[LDAP_password]" /><input type="text" name="LDAP_ciphertext" expr="[LDAP_ciphertext]" /></inputs><outputs><output type="flag" name="LDAP_IsValid" stage="LDAP_IsValid" /></outputs><onsuccess>774c12d7-1bc6-4cbb-a22d-b3690dbfe112</onsuccess><code><![CDATA[LDAP_IsValid = Crypter.CheckPassword(LDAP_password,LDAP_ciphertext);]]></code></stage><stage stageid="945bd04d-6520-4f5c-875f-895d50b0b884" name="LDAP_IsValid" type="Data"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><display x="-195" y="180" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6afcc68-4558-407a-9d15-d59a6d8af003" name="MD5Encrypt" type="SubSheetInfo"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><narrative>The MD5 hashing algorithm is a one-way cryptographic function that accepts a message of any length as input and returns as output a fixed-length digest value to be used for authenticating the original message. The MD5 hash function was originally designed for use as a secure cryptographic hash algorithm for authenticating digital signatures. MD5 has been deprecated for uses other than as a non-cryptographic checksum to verify data integrity and detect unintentional data corruption.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2e54406c-0c3b-493d-9585-6ffcef828d55" name="Start" type="Start"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to be encrypted" stage="MD5_password" /></inputs><onsuccess>0f87d926-f012-4962-b980-6d810ebd87fa</onsuccess></stage><stage stageid="b8751e90-378d-43e5-89c7-6f9c9aee99aa" name="End" type="End"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password" stage="MD5_ciphertext" /></outputs></stage><stage stageid="0f87d926-f012-4962-b980-6d810ebd87fa" name="MD5Encrypt Engine" type="Code"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MD5_password" expr="[MD5_password]" /></inputs><outputs><output type="text" name="MD5_ciphertext" stage="MD5_ciphertext" /></outputs><onsuccess>b8751e90-378d-43e5-89c7-6f9c9aee99aa</onsuccess><code><![CDATA[MD5_ciphertext = Crypter.MD5.Crypt(MD5_password);]]></code></stage><stage stageid="8034a696-1acd-489b-a3f5-afa99470d7e8" name="MD5_ciphertext" type="Data"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="409ec708-c753-4768-bdb6-410e28186580" name="MD5_password" type="Data"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8c74699-e374-4a12-a0cb-021d015098b3" name="MD5Encrypt - Verify" type="SubSheetInfo"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><narrative>The verify allows a password to be checked against the MD5 encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ff12b0be-0007-4668-a745-8f1500d7207d" name="Start" type="Start"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="MD5_password" /><input type="text" name="ciphertext" narrative="The ciphertext to verify against." stage="MD5_ciphertext" /></inputs><onsuccess>cc6df546-78c5-40e4-be7b-ae82a605ef0c</onsuccess></stage><stage stageid="3fa3ef42-805a-4724-ab6c-054d7d9a0dc8" name="End" type="End"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The validity status of the password" stage="MD5_IsValid" /></outputs></stage><stage stageid="cc6df546-78c5-40e4-be7b-ae82a605ef0c" name="MD5 Engine Verify" type="Code"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="MD5_password" expr="[MD5_password]" /><input type="text" name="MD5_ciphertext" expr="[MD5_ciphertext]" /></inputs><outputs><output type="flag" name="MD5_IsValid" stage="MD5_IsValid" /></outputs><onsuccess>3fa3ef42-805a-4724-ab6c-054d7d9a0dc8</onsuccess><code><![CDATA[MD5_IsValid = Crypter.CheckPassword(MD5_password,MD5_ciphertext);]]></code></stage><stage stageid="845b8c80-d869-41a3-9237-6142d7e73103" name="MD5_IsValid" type="Data"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><display x="-195" y="195" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7de93f34-eb2a-4b30-bb90-403634611d6f" name="LDAP_ciphertext" type="Data"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5b400d98-bc90-4e11-a424-bfc4ba9bada1" name="LDAP_password" type="Data"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="44937c49-0a82-421d-90de-7c2cf09279ee" name="MD5_ciphertext" type="Data"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2591d2cb-2066-4acf-9d8d-e8003eb5665c" name="MD5_password" type="Data"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4183185b-4338-431d-8e28-83b9ea000f01" name="EDES_ciphertext" type="Data"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df065508-d612-43d5-a10c-8d1103fecd49" name="EDES_password" type="Data"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ceefe4d-1076-414a-a82f-b8f729c7561a" name="password" type="Data"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f824a8a-459d-4570-aa0b-34fd1008037e" name="ciphertext" type="Data"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="982d2607-734f-48fb-af9a-0fb8c0623eee" name="Inputs" type="Block"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="9770a40c-2313-4e50-b370-e5a142b7b51f" name="Outputs" type="Block"><subsheetid>41a9f7ec-b38b-446e-a7cc-daa79d7395a4</subsheetid><loginhibit /><display x="-285" y="75" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="e22a91e3-2e5a-4d05-b80b-f4c7fb103f0f" name="Inputs" type="Block"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="42593317-2ba1-472c-83f4-a8766917b225" name="Outputs" type="Block"><subsheetid>5a8bea81-0723-4713-8917-a1bff73f5680</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="682ace1c-ba86-48e2-a82c-0b624e9a9da8" name="Inputs" type="Block"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="cd5be2aa-cfc1-412e-956b-df87d97a96d3" name="Outputs" type="Block"><subsheetid>13063294-0327-45f9-9e01-5760d9877ae7</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="5661d4f4-ce36-4282-a0c1-93e030c89a69" name="Inputs" type="Block"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="ca4e4779-638a-4aa6-bc53-54277407c951" name="Outputs" type="Block"><subsheetid>30cac4ad-9ac0-4341-a26e-1e63861ac55f</subsheetid><loginhibit /><display x="-285" y="135" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="93f86aba-386c-47bc-84ae-a35c2295b16d" name="Inputs" type="Block"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="46ce4428-a594-4f8e-99d5-dd9e5212e649" name="Outputs" type="Block"><subsheetid>e1c2c8f5-da39-4c6f-9f9c-cd353f4a6be0</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="c0505682-c20c-4bb5-bfbe-07b65d668fb0" name="Inputs" type="Block"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="abf9a732-ca5e-4f68-9edc-3a01c32618a7" name="Outputs" type="Block"><subsheetid>403a7912-2ad9-4d01-ae1b-d02419a3b093</subsheetid><loginhibit /><display x="-285" y="135" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="c510c2fd-59a0-4d22-81a7-cafeff418bf8" name="Inputs" type="Block"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="6dda8777-a2bb-45b2-a1e7-df4072b1d880" name="Outputs" type="Block"><subsheetid>2cdebcbe-9d32-4905-ac23-b7aacadfddf4</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="8320def5-532a-4f93-a9b3-8b616ae2ccd4" name="Inputs" type="Block"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="c5b62495-9b08-46e7-8d55-8ba90dc2d136" name="Outputs" type="Block"><subsheetid>7f89ac6f-b899-4443-bdee-056b053523e8</subsheetid><loginhibit /><display x="-285" y="150" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="d4b2ad0d-7d4e-4ad9-9ca1-69eb16248072" name="PhpassEncrypt" type="SubSheetInfo"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><narrative>Phpass is a portable public domain password hashing framework for use in PHP applications. phpass was released in 2005  when a typical web host ran PHP 4 and a typical web app used raw MD5. (source: https://www.openwall.com/phpass/)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="35e65dbc-ab5b-47a1-8374-f5e2a0bedea8" name="Start" type="Start"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to encrypt" stage="Phpass_password" /></inputs><onsuccess>35eeeddf-02b9-47f1-9ce9-48844417379f</onsuccess></stage><stage stageid="3cf736ee-9d26-4fcd-b32d-6c86251abe17" name="End" type="End"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password" stage="Phpass_ciphertext" /></outputs></stage><stage stageid="35eeeddf-02b9-47f1-9ce9-48844417379f" name="PhpassEncrypt Engine" type="Code"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Phpass_password" expr="[Phpass_password]" /></inputs><outputs><output type="text" name="Phpass_ciphertext" stage="Phpass_ciphertext" /></outputs><onsuccess>3cf736ee-9d26-4fcd-b32d-6c86251abe17</onsuccess><code><![CDATA[Phpass_ciphertext = Crypter.Phpass.Crypt(Phpass_password);]]></code></stage><stage stageid="13aa21b9-3137-458e-9c9e-cef0536fab87" name="Phpass_ciphertext" type="Data"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7424e868-da62-4dfb-9a7b-569039f20f24" name="Phpass_password" type="Data"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="947b6c41-324a-49c5-8467-58968973895f" name="Inputs" type="Block"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="b4b03ff5-0d11-472d-a37e-d941a4fd5714" name="Outputs" type="Block"><subsheetid>386412b9-1c13-4805-8fca-dac13c321012</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="9e31b6b0-3543-4b76-b7bc-7bc19834950a" name="PhpassEncrypt - Verify" type="SubSheetInfo"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><narrative>The verify allows a password to be checked against the Phpass encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5865694c-f28a-4717-bd8e-58e9aab9cc05" name="Start" type="Start"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="Phpass_password" /><input type="text" name="ciphertext" narrative="The ciphertext to verify against." stage="Phpass_ciphertext" /></inputs><onsuccess>22e7b2c4-3cbd-4e6f-947e-1b9de02c2078</onsuccess></stage><stage stageid="73d466b6-637b-4397-bd04-611ecf584d5b" name="End" type="End"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The validity status of the password" stage="Phpass_IsValid" /></outputs></stage><stage stageid="22e7b2c4-3cbd-4e6f-947e-1b9de02c2078" name="Phpass Engine Verify" type="Code"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="Phpass_password" expr="[Phpass_password]" /><input type="text" name="Phpass_ciphertext" expr="[Phpass_ciphertext]" /></inputs><outputs><output type="flag" name="Phpass_IsValid" stage="Phpass_IsValid" /></outputs><onsuccess>73d466b6-637b-4397-bd04-611ecf584d5b</onsuccess><code><![CDATA[Phpass_IsValid = Crypter.CheckPassword(Phpass_password,Phpass_ciphertext);]]></code></stage><stage stageid="028856ac-e47a-404e-88f8-2d51a7ae379a" name="Phpass_IsValid" type="Data"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><display x="-195" y="195" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c901e3ee-de80-400b-a2ac-3fa50875cce2" name="Phpass_ciphertext" type="Data"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93173a26-7d0b-433f-b113-c2597a0f8b0f" name="Phpass_password" type="Data"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9e048e0-475a-4132-9da0-3ea636e3bfcf" name="Inputs" type="Block"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="d67d152f-fee6-4590-945b-1e0a249ddce6" name="Outputs" type="Block"><subsheetid>98200341-5099-41d1-b108-210034443703</subsheetid><loginhibit /><display x="-285" y="150" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="890dab57-7180-4683-b639-640514439e6b" name="SHA256Encrypt" type="SubSheetInfo"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><narrative>SHA-256 is one of the successor hash functions to SHA-1 (collectively referred to as SHA-2), and is one of the strongest hash functions available. SHA-256 is not much more complex to code than SHA-1, and has not yet been compromised in any way. The 256-bit key makes it a good partner-function for AES. It is defined in the NIST (National Institute of Standards and Technology) standard ‘FIPS 180-4’. NIST also provide a number of test vectors to verify correctness of implementation. (source: https://www.movable-type.co.uk/scripts/sha256.html)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ea9b5a1a-c6d9-4899-b218-c9bca6b1f9b5" name="Start" type="Start"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to be encrypted." stage="SHA256_password" /></inputs><onsuccess>69f60cb2-b9a0-487a-ba37-cb8110de73ca</onsuccess></stage><stage stageid="81c1483c-fd94-449c-adb4-7cc5ee5b6bdb" name="End" type="End"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password" stage="SHA256_ciphertext" /></outputs></stage><stage stageid="69f60cb2-b9a0-487a-ba37-cb8110de73ca" name="SHA256Encrypt Engine" type="Code"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SHA256_password" expr="[SHA256_password]" /></inputs><outputs><output type="text" name="SHA256_ciphertext" stage="SHA256_ciphertext" /></outputs><onsuccess>81c1483c-fd94-449c-adb4-7cc5ee5b6bdb</onsuccess><code><![CDATA[SHA256_ciphertext = Crypter.Sha256.Crypt(SHA256_password);]]></code></stage><stage stageid="f69d2f49-175e-4511-a270-fcb49fa2b177" name="SHA256_ciphertext" type="Data"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03c5f2c0-e5dc-45f9-beb9-b289fae9ac7b" name="SHA256_password" type="Data"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdeda809-4449-4560-8a30-f5a55d6c5d17" name="Inputs" type="Block"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="70cb3f9f-0ffb-43d5-a243-7c3362417c2c" name="Outputs" type="Block"><subsheetid>d14ad524-f8c3-4ca4-ab57-c201415fdc87</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="e963d359-a496-47bc-bb5f-ae9beeec3c4e" name="SHA256Encrypt - Verify" type="SubSheetInfo"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><narrative>The verify allows a password to be checked against the SHA256 encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4003a1d1-218d-4f81-9fc8-f661e9e14609" name="Start" type="Start"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="SHA256_password" /><input type="text" name="ciphertext" narrative="The ciphertext to verify against." stage="SHA256_ciphertext" /></inputs><onsuccess>59f0700b-21c2-4f50-90a1-00d84248362d</onsuccess></stage><stage stageid="470795e9-d099-4a72-b0f4-1a5fc6ad65d2" name="End" type="End"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The validity status of the password" stage="SHA256_IsValid" /></outputs></stage><stage stageid="59f0700b-21c2-4f50-90a1-00d84248362d" name="SHA256 Engine Verify" type="Code"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="SHA256_password" expr="[SHA256_password]" /><input type="text" name="SHA256_ciphertext" expr="[SHA256_ciphertext]" /></inputs><outputs><output type="flag" name="SHA256_IsValid" stage="SHA256_IsValid" /></outputs><onsuccess>470795e9-d099-4a72-b0f4-1a5fc6ad65d2</onsuccess><code><![CDATA[SHA256_IsValid = Crypter.CheckPassword(SHA256_password,SHA256_ciphertext);]]></code></stage><stage stageid="6fde5313-16cd-43db-a9d2-5ea0f2a80943" name="SHA256_IsValid" type="Data"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><display x="-195" y="195" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d642e656-45e6-4c7c-a9a7-ec505e02916a" name="SHA256_ciphertext" type="Data"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba1d28dc-819d-4fe6-ae17-5f29cd1a67b7" name="SHA256_password" type="Data"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2eaa1035-6439-4560-b8f2-bdeafd1af664" name="Inputs" type="Block"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="d3b6e6ec-368f-4e46-a6e5-97d24919a690" name="Outputs" type="Block"><subsheetid>1c41502d-e887-4501-82ac-168b8cd1941f</subsheetid><loginhibit /><display x="-285" y="150" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="6b602041-38f0-471f-84dc-98ec52720757" name="SHA512Encrypt" type="SubSheetInfo"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><narrative> SHA-256 and SHA-512 are novel hash functions computed with 32-bit and 64-bit words, respectively. They use different shift amounts and additive constants, but their structures are otherwise virtually identical, differing only in the number of rounds. SHA-224 and SHA-384 are truncated versions of SHA-256 and SHA-512 respectively, computed with different initial values. SHA-512/224 and SHA-512/256 are also truncated versions of SHA-512, but the initial values are generated using the method described in Federal Information Processing Standards (FIPS) PUB 180-4. (source: https://en.wikipedia.org/wiki/SHA-2)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a3476ff7-5bfd-4e12-915d-bbb1c0e91f9e" name="Start" type="Start"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to be encrypted" stage="SHA512_password" /></inputs><onsuccess>fb1807c3-98dd-44c7-8e48-6e968028f873</onsuccess></stage><stage stageid="1c4c790c-0992-45af-9450-1a40b07998c5" name="End" type="End"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password" stage="SHA512_ciphertext" /></outputs></stage><stage stageid="fb1807c3-98dd-44c7-8e48-6e968028f873" name="SHA512Encrypt Engine" type="Code"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="SHA512_password" expr="[SHA512_password]" /></inputs><outputs><output type="text" name="SHA512_ciphertext" stage="SHA512_ciphertext" /></outputs><onsuccess>1c4c790c-0992-45af-9450-1a40b07998c5</onsuccess><code><![CDATA[SHA512_ciphertext = Crypter.Sha512.Crypt(SHA512_password);]]></code></stage><stage stageid="5a7850bb-a012-48c3-917e-ece13e43649f" name="SHA512_ciphertext" type="Data"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3563c1c2-055d-44e3-a4c7-16ff7f2d1130" name="SHA512_password" type="Data"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="616a646c-84cc-4506-bdd0-be0e23a70e80" name="Inputs" type="Block"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="d06aa850-157b-4290-973c-dad932fad139" name="Outputs" type="Block"><subsheetid>d67ecf93-1cce-4092-ab90-dd23ed6f9119</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="e9040ad2-cf86-4b03-815f-bac1458fcde8" name="SHA512Encrypt - Verify" type="SubSheetInfo"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><narrative>The verify allows a password to be checked against the SHA512 encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="358848bf-5328-4dc8-9523-13efd1f23730" name="Start" type="Start"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="SHA512_password" /><input type="text" name="ciphertext" narrative="The ciphertext to verify against." stage="SHA512_ciphertext" /></inputs><onsuccess>2896f3c8-3a15-473c-b81b-58986b009708</onsuccess></stage><stage stageid="3be12ca2-f51d-4686-a62f-5fb7d8caef46" name="End" type="End"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The validity status of the password" stage="SHA512_IsValid" /></outputs></stage><stage stageid="2896f3c8-3a15-473c-b81b-58986b009708" name="SHA512 Engine Verify" type="Code"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="SHA512_password" expr="[SHA512_password]" /><input type="text" name="SHA512_ciphertext" expr="[SHA512_ciphertext]" /></inputs><outputs><output type="flag" name="SHA512_IsValid" stage="SHA512_IsValid" /></outputs><onsuccess>3be12ca2-f51d-4686-a62f-5fb7d8caef46</onsuccess><code><![CDATA[SHA512_IsValid = Crypter.CheckPassword(SHA512_password,SHA512_ciphertext);]]></code></stage><stage stageid="61c30642-c05f-4e15-b514-e96e1d34125c" name="SHA512_IsValid" type="Data"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><display x="-195" y="195" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea9c8e55-f2e3-4ae1-9970-2a233560ebf0" name="SHA512_ciphertext" type="Data"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="472d6a11-12f5-44be-9826-7bd8827b56f0" name="SHA512_password" type="Data"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="507517c9-a7a1-429e-95ce-3c8f0996ef77" name="Inputs" type="Block"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="76c1e3b8-4a8a-4566-a95e-3085d56de543" name="Outputs" type="Block"><subsheetid>28c51aed-a858-430c-b7c4-94c0dcf0c1f0</subsheetid><loginhibit /><display x="-285" y="150" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="73677eaf-3859-4fbc-97ab-f609f65d6fdd" name="DESEncrypt" type="SubSheetInfo"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><narrative>The Data Encryption Standard (DES) is a symmetric-key algorithm for the encryption of digital data. Although its short key length of 56 bits makes it too insecure for applications, it has been highly influential in the advancement of cryptography.

Developed in the early 1970s at IBM and based on an earlier design by Horst Feistel, the algorithm was submitted to the National Bureau of Standards (NBS) following the agency's invitation to propose a candidate for the protection of sensitive, unclassified electronic government data. In 1976, after consultation with the National Security Agency (NSA), the NBS selected a slightly modified version (strengthened against differential cryptanalysis, but weakened against brute-force attacks), which was published as an official Federal Information Processing Standard (FIPS) for the United States in 1977. (source: https://en.wikipedia.org/wiki/Data_Encryption_Standard)</narrative><display x="-165" y="-165" w="240" h="180" /></stage><stage stageid="4dafc5c6-1a25-40b4-8df6-5567a88a7c66" name="Start" type="Start"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to be encrypted." stage="DES_password" /></inputs><onsuccess>c43422bd-a2d7-415f-9916-c56befda386a</onsuccess></stage><stage stageid="75b97332-0023-4ec0-acb1-e8d454219586" name="End" type="End"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ciphertext" narrative="The encrypted password" stage="DES_ciphertext" /></outputs></stage><stage stageid="c43422bd-a2d7-415f-9916-c56befda386a" name="DESEncrypt Engine" type="Code"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="DES_password" expr="[DES_password]" /></inputs><outputs><output type="text" name="DES_ciphertext" stage="DES_ciphertext" /></outputs><onsuccess>75b97332-0023-4ec0-acb1-e8d454219586</onsuccess><code><![CDATA[DES_ciphertext = Crypter.TraditionalDes.Crypt(DES_password);]]></code></stage><stage stageid="d96449e6-3be4-41e6-a00f-d12ad560b2b4" name="DES_ciphertext" type="Data"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="461554f0-86f4-4689-8c97-e229eb023797" name="DES_password" type="Data"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a55a208-ad2a-4e58-b044-f736b18c793e" name="Inputs" type="Block"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="df6bf65c-7587-4021-ab63-46a05443c2b3" name="Outputs" type="Block"><subsheetid>836bff2a-e716-4215-92b2-9dc570e4e3e1</subsheetid><loginhibit /><display x="-285" y="60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="36398af7-91b6-483f-b421-eb847268dcb3" name="DESEncrypt - Verify" type="SubSheetInfo"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><narrative>The verify allows a password to be checked against the DES encrypted version. If the password being checked matches the ciphertext hash, the return value, IsValid, will be true, otherwise false.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ff5b3069-2203-4619-908a-62a36c8f23c0" name="Start" type="Start"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="password" narrative="The password to verify" stage="DES_password" /><input type="text" name="ciphertext" narrative="The ciphertext to verify against." stage="DES_ciphertext" /></inputs><onsuccess>b7d7a5b0-1d35-4c84-ab4e-d157f9450863</onsuccess></stage><stage stageid="62994010-6d6a-4d27-918a-b964918ec5cc" name="End" type="End"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="IsValid" narrative="The validity status of the password" stage="DES_IsValid" /></outputs></stage><stage stageid="b7d7a5b0-1d35-4c84-ab4e-d157f9450863" name="DES Engine Verify" type="Code"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="DES_password" expr="[DES_password]" /><input type="text" name="DES_ciphertext" expr="[DES_ciphertext]" /></inputs><outputs><output type="flag" name="DES_IsValid" stage="DES_IsValid" /></outputs><onsuccess>62994010-6d6a-4d27-918a-b964918ec5cc</onsuccess><code><![CDATA[DES_IsValid = Crypter.CheckPassword(DES_password,DES_ciphertext);]]></code></stage><stage stageid="e5f52bff-5605-4695-8cd7-2d63bd0568bf" name="DES_IsValid" type="Data"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><narrative>The process return value</narrative><display x="-195" y="195" w="120" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="07e6c66d-f7d7-4c62-9c8d-7b78d49cf1c4" name="DES_ciphertext" type="Data"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><narrative>The Des_ciphertext storage.</narrative><display x="-195" y="75" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fce9d83-2aeb-422e-b70e-550daa2bce46" name="DES_password" type="Data"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><narrative>The des_password storage.</narrative><display x="-195" y="0" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="72f4f2d0-c403-46e2-9ef1-30ca9e5c6586" name="Inputs" type="Block"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="4801cecd-c045-4d76-8142-aaa74f4bd4ad" name="Outputs" type="Block"><subsheetid>d81901fa-5c0e-4eb7-88b8-91bfa803cc5f</subsheetid><loginhibit /><display x="-285" y="150" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="0432deb2-f1c6-430a-b961-72e520d3386e" name="Copyright" type="Note"><loginhibit /><narrative>‘The MIT License’

© 2020 Blue Prism Limited

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE
</narrative><display x="-435" y="0" w="330" h="240" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage></process></object>
        <process-group id="ff1d8e3b-5812-4c4c-a9f8-a1a8192fc815" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="5ff16cd8-db6a-49c8-812f-35dbdae506fa" />
            </members>
        </process-group>
        <object-group id="245c1937-f009-4f74-83bc-696909e45db1" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="9214daa1-8813-4d68-82ea-59ef5d76201c" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>